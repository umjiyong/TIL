한마디로 정의하면 이름에서 알 수 있듯이 분할 업로드.

S3 멀티파트 업로드 방식
 클라이언트가 서버에 업로드 파일 정보 제공 
-> 서버가 파일 크기를 기반으로 적절히 분할한다. uploadURL(특정 기간만 업로드가 가능한 Presigned URL)과 각 파트에 해당하는 partNumber이라는 고유값에 대한 정보가 클라이언트에게 제공된다.
-> 서버가 해당 멀티파트 업로드를 식별하는 ID값인 uploadId를 저장한다.
-> 클라이언트가 획득한 정보에 맞게 차례 또는 병렬로 파일을 업로드한다. (클라이언트가 브라우저일 경우 File#slice() 함수를 이용하여 각 파일을 파트 개수만큼 논리적 분할 후 개별 업로드가 가능하다.)
-> 업로드 성공시 응답 헤더에 ETag가 담겨져 오는데 이 값을 각 파트의 partNumber와 맵핑하고 서버에 최종 업로드 완료 요청을 한다.
-> uploadID와 모든 파트의 ETag, partNumber를 AWS에 요청하면 최종 업로드가 완료된다.

장점 - 멀티파트 방식을 사용하지 않고 Presigned URL만을 이용하면 단일 파일 기준 5GB의 제한을 가진다. 하지만 멀티파트를 이용하면 5TB까지 업로드가 가능하다.
    - 병렬처리를 하기 때문에 속도 면에서 우세하다.
    - 마찬가지로 병렬처리를 하기 때문에 네트워크 오류 등 업로드에 에러가 나면 해당 파트만 재 업로드하면 되기 때문에 오류로 인한 영향이 적다.

고려할 점 - 파트별 최소 허용크기는 5MB이고 최대 개수는 10,000개이다.
        - 브라우저에 따라 업로드 허용 크기가 다른 경우가 있으므로 사용 브라우저의 제한을 확인하자. (최대 업로드를 2GB로 설정하면 거의 모든 상황에 대응할 수 있다고 한다.)
        - ETag가 담긴 응답헤더를 브라우저가 획득하는 것이 매우 중요하므로 CORS 설정에 유의하자.

Ref - https://jsonobject.tistory.com/626
